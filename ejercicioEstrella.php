<?php


/** 
 * ALGORITMO DE LUHN ðŸ’³
 * 
 * Luhn fue un cientÃ­fico de IBM que inventÃ³ un algoritmo para validar nÃºmeros de tarjetas de crÃ©dito y el imei de los telÃ©fonos mÃ³viles.
 * Este algoritmo se basa en la suma de los dÃ­gitos de la tarjeta y en la multiplicaciÃ³n de los dÃ­gitos en posiciones impares.
 * 
 * Las instrucciones para validar una tarjeta de crÃ©dito son las siguientes:
 * 
 * 1. Se toman los nÃºmeros de la tarjeta (16 dÃ­gitos) y se multiplican por 2 los nÃºmeros que estÃ¡n en las posiciones impares, arrancando el primer dÃ­gito de la tarjeta en la posiciÃ³n 1.
 * 2. Si el resultado de la multiplicaciÃ³n es mayor o igual a 10, se suman los dÃ­gitos del resultado.
 * 3. Se suman todos los nÃºmeros.
 * 4. Si el resultado de la suma termina en 0, la tarjeta es vÃ¡lida.
 * 
 * Podes ver el ejemplo en la imagen "ejemploTarjeta.png".
 * 
 * ðŸ’¡ Hint: los valores de una variable se pueden recorrer como si fuera un array. ðŸ¤«
 */


 // SI HACES ESTE EJERCICIO, NO HACE FALTA QUE HAGAS LOS DEMAS; VALE POR DIEZ. ðŸŒŸ


function validarTarjeta($numeroTarjeta) {
    $digitosQueNoSeMultiplican = [];
    $digitosMultiplicados = [];
    $digitosFinales = [];
    for($i = 0; $i < strlen($numeroTarjeta); $i = $i + 2){
        $digitosMultiplicados[] = $numeroTarjeta[$i] * 2;
    }

    for($i = 1; $i < strlen($numeroTarjeta); $i = $i + 2){
        $digitosQueNoSeMultiplican[] = $numeroTarjeta[$i];
    }

    foreach($digitosMultiplicados as $digito){
         if($digito >= 10){
             $digitosSumados = array_sum(str_split($digito));
             $digitosFinales[] = $digitosSumados;
        } else {
             $digitosFinales[] = $digito;
         }
    }

    $sumaDigitos = array_sum($digitosFinales) + array_sum($digitosQueNoSeMultiplican);

    $sumaArray = (str_split($sumaDigitos));
    if ($sumaArray[1] == 0){
        return true;
    } else {
        return false;
    }
    
}



